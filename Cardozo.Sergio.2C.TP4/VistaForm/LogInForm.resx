<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAoAAAAHAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ4ODhNPz8/nCwsLH0MDAxSAAAANAAAACEAAAASAAAACQAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNzc3SWZmZvGtra3/np6e/4yMjP53d3ftXV1d0EFB
        Qa8xMTGHFhYWXAAAADoAAAAlAAAAFQAAAAoAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQSdlZWXseHh4/7Ozs/+2trb/tra2/7e3
        t/+4uLj/tbW1/6SlpP+UlJT+fn5+82VkZdhFRUW3NDQ0kR4eHmYAAABAAAAAKQAAABgAAAAMAAAABQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUVFRVXNzc/94eHj/s7Oz/7a2
        tv+3t7f/uLi4/7i4uP+5ubn/urq6/7u7u/+7u7v/vLy8/7u7u/+tra3/mZmZ/4SEhPhqamreS0tLvTc3
        N5giIiJuAwMDRQAAAC0AAAAbAAAADgAAAAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAABRUVFVc3Nz/3h4
        eP+0tLT/t7e3/7i4uP+5ubn/ubm6/7q6uv+7u7v/vLy8/729vf++vr3/vr6+/7+/v//AwMD/wMDA/8HB
        wf/BwcH/s7Oz/6Ghof+Mi4z6cnJy41NTU8Q6OjqgKCgoeAgICD4AAAAIAAAAAAAAAAAAAAAAAAAAAFFR
        UVVzc3P/eHh4/7W1tf+4uLj/vLy8/+3t7f/T1dv/1dXV/8vLy//Dw8P/v7+//7+/v//AwMD/wcHB/8HB
        wf/CwsL/w8PD/8PDw//ExMT/xMTE/8TExP/FxcX/xcXF/7u7u/+np6f/Y2Nj0AAAABgAAAAAAAAAAAAA
        AAAAAAAAUVFRVXR0dP95eXn/tra2/7m5uf+5ubn/Um+q/zVkvP8/Z7T/VnKs/26Aqv+GkrD/n6a7/7W3
        vP+7u7v/urq6/76+vv/ExMT/xcXF/8bGxv/Gxsb/xsbG/8fHx//Hx8f/x8fH/8fHx/9wcHDYAAAAGwAA
        AAAAAAAAAAAAAAAAAABRUVFVdnZ2/3x8fP+3t7f/urq6/7a2tv9Faqj/XZ73/12i+f9Nhtz/UpT3/0qI
        5f86abv/M2S6/zlgrf95g53/n5+f/5eWlv+Je3v/mZCQ/6ampv+ysrL/wMDA/8nJyf/Jycn/ycnJ/3Fx
        cdgAAAAbAAAAAAAAAAAAAAAAAAAAAFFRUVV5eXn/gICA/7i4uP+7u7v/t7e3/2CDrv9zt/r/eMH8/1+c
        3v9rsfv/arH7/1iS3/9gpvn/WZ34/1dlh/6Ednb/bDg2/307OP91NzP/aTMx/2o+Pf9mR0b/e3Fx/8zM
        zP/Ly8v/cnJy2AAAABsAAAAAAAAAAAAAAAAAAAAAUVFRVX19ff+FhYX/ubm5/7y8vP+4uLj/bIql/2ye
        1f96sNb/b6PS/4jK/P+Ezf3/Z6Th/3rE/P9xufv/IECDdnY9O6Z8MC3/lExF/6BWSv+MS0T/mE5G/5VK
        Q/9yV1b/zs7O/87Ozv9ycnLYAAAAGwAAAAAAAAAAAAAAAAAAAABRUVFVgYGC/4qKiv+6urr/vr6+/7q6
        uf9DaKf/VpX2/1OW9v9Ecc//VkHR/2JX0P9kftH/i8f4/3q38/8lSpptjExHmadbT/+oYlb/sWhW/5dX
        S/+qYFH/plxO/3RZWP/Q0ND/0NDQ/3Nzc9gAAAAbAAAAAAAAAAAAAAAAAAAAAFFRUVWGhob/kJCQ/7y8
        vP+/v7//u7u7/0pvqf9qrfn/b7f7/1yO3v9+Wvn/e1f4/1NTxvJjldSuJk2nTwAAqgOLTkiYsWhb/712
        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
        AAPAPg4DwD4OA8A+DgPAP/4DwH/+A////wM=
</value>
  </data>
</root>